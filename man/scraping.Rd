% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/scrape_authorship.R
\name{vt_scrape_requirement_editors}
\alias{vt_scrape_requirement_editors}
\alias{vt_scrape_test_case_editors}
\alias{vt_scrape_test_code_editors}
\alias{vt_scrape_function_editors}
\alias{vt_kable_requirement_editors}
\alias{vt_kable_function_editors}
\alias{vt_kable_test_case_editors}
\alias{vt_kable_test_code_editors}
\title{Scrape authorship information}
\usage{
vt_scrape_requirement_editors(
  tags = c("editor", "editDate"),
  src = ".",
  ref = vt_path(),
  dynamic_ref = NULL
)

vt_scrape_test_case_editors(
  tags = c("editor", "editDate"),
  src = ".",
  ref = vt_path(),
  dynamic_ref = NULL
)

vt_scrape_test_code_editors(
  tags = c("editor", "editDate", "deprecate"),
  src = ".",
  ref = vt_path(),
  dynamic_ref = NULL
)

vt_scrape_function_editors(
  tags = c("editor", "editDate", "export"),
  src = ".",
  ref = vt_path()
)

vt_kable_requirement_editors(x, format = vt_render_to())

vt_kable_function_editors(x, format = vt_render_to())

vt_kable_test_case_editors(x, format = vt_render_to())

vt_kable_test_code_editors(x, format = vt_render_to())
}
\arguments{
\item{tags}{which tags to keep. defaults to editor and editDate}

\item{src}{path to package sources. defaults to current directory and passed to \code{\link{vt_scrape_tags_from}}}

\item{ref}{reference path to whre validation documentation lives. defaults
to \code{\link{vt_path}} annd passed to \code{\link{vt_scrape_tags_from}}.}

\item{dynamic_ref}{dynamic referencer object}

\item{x}{data.frame as exported from vt_scrape_*}

\item{format}{passed to \code{knitr::kable}, NULL by default}
}
\value{
data.frame containing the results of the scraped roxygen tags for each section

knitr_kable object
}
\description{
These functions provide utitilies to scrape the editor and editDate roxygen tags
and put them into a nice data.frame for use in the validation reports. In addition,
opinionated kable formatting functions are provided as well to facilitate nice
printing in the reports.
}
\note{
vt_scrape_functions Requires access to raw R/ or function documentation parsed via valtools into validation/ folder.
Cannot pull information from installed R/ location.
}
\examples{

withr::with_tempdir({

captured_output <- capture.output({vt_create_package(open = FALSE)})
vt_use_req(
     name = "req1",
     username = "B user",
     title = "Requirement 1",
     open = FALSE)
writeLines(c(
    "#' @title Say Hello",
    "#' @editor B User",
    "#' @editDate 2021-04-27",
    "#' @export",
    "hello <- function(){print(\"Hello\")}"
    ), con = "R/hello.R")
vt_use_test_case(
    name = "testcase1",
    username = "B user",
    title = "TesT Case 1",
    open = FALSE)
vt_use_test_code(
    name = "testcode1",
    username = "C user",
    open = FALSE)

req_editors <- vt_scrape_requirement_editors()
vt_kable_requirement_editors(req_editors)

fun_editors <- vt_scrape_function_editors()
vt_kable_function_editors(fun_editors)

t_case_editors <- vt_scrape_test_case_editors()
vt_kable_test_case_editors(t_case_editors)

t_code_editors <- vt_scrape_test_code_editors()
vt_kable_test_code_editors(t_code_editors)


})

}
